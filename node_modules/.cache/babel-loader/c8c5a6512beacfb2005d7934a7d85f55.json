{"ast":null,"code":"import _classCallCheck from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/a11one/reverb/src/components/MusicPlayer/index.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row } from 'reactstrap';\n\nvar MusicPlayer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MusicPlayer, _Component);\n\n  function MusicPlayer(props) {\n    var _this;\n\n    _classCallCheck(this, MusicPlayer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MusicPlayer).call(this, props));\n    _this.state = {\n      currentSong: props.currentSong,\n      play: false,\n      pause: true\n    };\n    _this.changeSong = _this.changeSong.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(MusicPlayer, [{\n    key: \"changeSong\",\n    value: function changeSong(song) {\n      this.setState({\n        currentSong: song\n      }), function () {\n        document.getElementById(\"music-player\").pause();\n        document.getElementById(\"music-player\").setAttribute('src', this.state.currentSong);\n        document.getElementById(\"music-player\").load();\n        document.getElementById(\"music-player\").play();\n        this.props.complete(song);\n      };\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setInterval(function () {\n        _this2.setState(function () {\n          console.log('Setting state');\n          return {\n            unseen: \"does not display\"\n          };\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"The prop is\", this.state.currentSong);\n      console.log(\"Render called\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        id: \"music-player\",\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: this.state.currentSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Stream Now\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          _this3.changeSong('https://firebasestorage.googleapis.com/v0/b/reverb-9081f.appspot.com/o/rizkyrilos%20-%20Queen%20-%20Bohemian%20Rhapsody.mp3?alt=media&token=56ed2628-668d-4546-a657-692f4d51899e');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Bohemian Rhapsody\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          _this3.changeSong('https://firebasestorage.googleapis.com/v0/b/reverb-9081f.appspot.com/o/Skrillex%20%26%20Poo%20Bear%20-%20Would%20You%20Ever.mp3?alt=media&token=1de62308-3d33-44cc-95aa-443ff5953d2a');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Would You Ever\"));\n    }\n  }]);\n\n  return MusicPlayer;\n}(Component);\n\nMusicPlayer.propTypes = {\n  currentSong: PropTypes.string\n};\nexport default MusicPlayer;","map":{"version":3,"sources":["/home/a11one/reverb/src/components/MusicPlayer/index.js"],"names":["React","Component","PropTypes","Button","Container","Row","MusicPlayer","props","state","currentSong","play","pause","changeSong","bind","song","setState","document","getElementById","setAttribute","load","complete","setInterval","console","log","unseen","propTypes","string"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,QAAuC,YAAvC;;IAGMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACnB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAEF,KAAK,CAACE,WADR;AAEXC,MAAAA,IAAI,EAAE,KAFK;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAPmB;AAQpB;;;;+BACUC,I,EAAM;AACf,WAAKC,QAAL,CAAc;AAACN,QAAAA,WAAW,EAAEK;AAAd,OAAd,GAAoC,YAAY;AAC9CE,QAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCN,KAAxC;AACAK,QAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,YAAxC,CAAqD,KAArD,EAA4D,KAAKV,KAAL,CAAWC,WAAvE;AACAO,QAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCE,IAAxC;AACAH,QAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCP,IAAxC;AACA,aAAKH,KAAL,CAAWa,QAAX,CAAoBN,IAApB;AACD,OAND;AAOD;;;wCAEmB;AAAA;;AAClBO,MAAAA,WAAW,CAAC,YAAM;AAChB,QAAA,MAAI,CAACN,QAAL,CAAc,YAAM;AAClBO,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,iBAAO;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAP;AACD,SAHD;AAID,OALU,EAKR,IALQ,CAAX;AAMD;;;6BAEQ;AAAA;;AACPF,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKf,KAAL,CAAWC,WAAtC;AACAa,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,QAAQ,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,GAAG,EAAE,KAAKf,KAAL,CAAWC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADJ,EAII,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CADA,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,EAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EASA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,mBAAM;AACrB,UAAA,MAAI,CAACG,UAAL,CAAgB,kLAAhB;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BATA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZA,EAaA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,mBAAK;AACpB,UAAA,MAAI,CAACA,UAAL,CAAgB,sLAAhB;AACD,SAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAbA,CADF;AAmBD;;;;EAnDuBX,S;;AAsD1BK,WAAW,CAACmB,SAAZ,GAAwB;AACtBhB,EAAAA,WAAW,EAAEP,SAAS,CAACwB;AADD,CAAxB;AAGA,eAAepB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row } from 'reactstrap';\n\n\nclass MusicPlayer extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      currentSong: props.currentSong,\n      play: false,\n      pause: true,\n    }\n    this.changeSong = this.changeSong.bind(this);\n  }\n  changeSong(song) {\n    this.setState({currentSong: song}), function () {\n      document.getElementById(\"music-player\").pause();\n      document.getElementById(\"music-player\").setAttribute('src', this.state.currentSong);\n      document.getElementById(\"music-player\").load();\n      document.getElementById(\"music-player\").play();\n      this.props.complete(song);\n    }\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState(() => {\n        console.log('Setting state');\n        return { unseen: \"does not display\"}\n      });\n    }, 1000);\n  }\n\n  render() {\n    console.log(\"The prop is\", this.state.currentSong);\n    console.log(\"Render called\");\n    return (\n      <div>\n      <Row>\n          <audio id=\"music-player\" controls>\n            <source src={this.state.currentSong}/>\n          </audio>\n          <Button color=\"warning\">Stream Now</Button>\n      </Row>\n      <br />\n      <br />\n      <Button onClick={() => {\n        this.changeSong('https://firebasestorage.googleapis.com/v0/b/reverb-9081f.appspot.com/o/rizkyrilos%20-%20Queen%20-%20Bohemian%20Rhapsody.mp3?alt=media&token=56ed2628-668d-4546-a657-692f4d51899e')\n      }}>Bohemian Rhapsody</Button>\n      <div />\n      <Button onClick={()=> {\n        this.changeSong('https://firebasestorage.googleapis.com/v0/b/reverb-9081f.appspot.com/o/Skrillex%20%26%20Poo%20Bear%20-%20Would%20You%20Ever.mp3?alt=media&token=1de62308-3d33-44cc-95aa-443ff5953d2a')\n      }}>Would You Ever</Button>\n      </div>\n      );\n  }\n}\n\nMusicPlayer.propTypes = {\n  currentSong: PropTypes.string,\n}\nexport default MusicPlayer\n"]},"metadata":{},"sourceType":"module"}