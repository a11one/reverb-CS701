{"ast":null,"code":"import _classCallCheck from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/a11one/reverb/src/components/Messages/MessageItem.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nvar MessageItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MessageItem, _Component);\n\n  function MessageItem(props) {\n    var _this;\n\n    _classCallCheck(this, MessageItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageItem).call(this, props));\n\n    _this.onToggleEditMode = function () {\n      _this.setState(function (state) {\n        return {\n          editMode: !state.editMode,\n          editText: _this.props.message.text\n        };\n      });\n    };\n\n    _this.onChangeEditText = function (event) {\n      _this.setState({\n        editText: event.target.value\n      });\n    };\n\n    _this.onSaveEditText = function () {\n      _this.props.onEditMessage(_this.props.message, _this.state.editText);\n\n      _this.setState({\n        editMode: false\n      });\n    };\n\n    _this.state = {\n      editMode: false,\n      editText: _this.props.message.text\n    };\n    return _this;\n  }\n\n  _createClass(MessageItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          authUser = _this$props.authUser,\n          message = _this$props.message,\n          onRemoveMessage = _this$props.onRemoveMessage;\n      var _this$state = this.state,\n          editMode = _this$state.editMode,\n          editText = _this$state.editText;\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, editMode ? React.createElement(\"input\", {\n        type: \"text\",\n        value: editText,\n        onChange: this.onChangeEditText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, message.userId), \" \", message.text, message.editedAt && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"(Edited)\")), authUser.username === message.userId && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, editMode ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onSaveEditText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        onClick: this.onToggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Reset\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"warning\",\n        onClick: this.onToggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Stream Now\")), !editMode && React.createElement(Button, {\n        type: \"button\",\n        onClick: function onClick() {\n          return onRemoveMessage(message.uid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return MessageItem;\n}(Component);\n\nexport default MessageItem;","map":{"version":3,"sources":["/home/a11one/reverb/src/components/Messages/MessageItem.js"],"names":["React","Component","Button","MessageItem","props","onToggleEditMode","setState","state","editMode","editText","message","text","onChangeEditText","event","target","value","onSaveEditText","onEditMessage","authUser","onRemoveMessage","userId","editedAt","username","uid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nclass MessageItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editText: this.props.message.text,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editText: this.props.message.text,\n    }));\n  };\n\n  onChangeEditText = event => {\n    this.setState({ editText: event.target.value });\n  };\n\n  onSaveEditText = () => {\n    this.props.onEditMessage(this.props.message, this.state.editText);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, message, onRemoveMessage } = this.props;\n    const { editMode, editText } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={this.onChangeEditText}\n          />\n        ) : (\n          <span>\n            <strong>{message.userId}</strong> {message.text}\n            {message.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {authUser.username === message.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <Button onClick={this.onSaveEditText}>Save</Button>\n                <Button onClick={this.onToggleEditMode}>Reset</Button>\n              </span>\n            ) : (\n              <div>\n                <Button color= \"warning\" onClick={this.onToggleEditMode}>Stream Now</Button>\n              </div>\n            )}\n\n            {!editMode && (\n              <Button\n                type=\"button\"\n                onClick={() => onRemoveMessage(message.uid)}\n              >\n                Delete\n              </Button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default MessageItem;\n"]},"metadata":{},"sourceType":"module"}