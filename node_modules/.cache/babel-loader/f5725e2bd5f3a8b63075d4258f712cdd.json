{"ast":null,"code":"import _objectWithoutProperties from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/a11one/reverb/src/components/Messages/Messages.js\";\nimport React, { Component } from 'react';\nimport { Button, Input, Form } from 'reactstrap';\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\nvar isStreaming = false;\n\nvar Messages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Messages, _Component);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Messages).call(this, props));\n\n    _this.onListenForMessages = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.firebase.messages().orderByChild('createdAt').limitToLast(_this.state.limit).on('value', function (snapshot) {\n        var messageObject = snapshot.val();\n\n        if (messageObject) {\n          var messageList = Object.keys(messageObject).map(function (key) {\n            return _objectSpread({}, messageObject[key], {\n              uid: key\n            });\n          });\n\n          _this.setState({\n            messages: messageList,\n            loading: false\n          });\n        } else {\n          _this.setState({\n            messages: null,\n            loading: false\n          });\n        }\n      });\n    };\n\n    _this.onChangeText = function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    };\n\n    _this.onCreateMessage = function (event, authUser) {\n      _this.props.firebase.messages().push({\n        text: _this.state.text,\n        userId: authUser.uid,\n        userName: authUser.username,\n        createdAt: _this.props.firebase.serverValue.TIMESTAMP\n      });\n\n      _this.setState({\n        text: ''\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onEditMessage = function (message, text) {\n      var uid = message.uid,\n          messageSnapshot = _objectWithoutProperties(message, [\"uid\"]);\n\n      _this.props.firebase.message(message.uid).set(_objectSpread({}, messageSnapshot, {\n        text: text,\n        editedAt: _this.props.firebase.serverValue.TIMESTAMP\n      }));\n    };\n\n    _this.onRemoveMessage = function (uid) {\n      _this.props.firebase.message(uid).remove();\n    };\n\n    _this.onNextPage = function () {\n      _this.setState(function (state) {\n        return {\n          limit: state.limit + 5\n        };\n      }, _this.onListenForMessages);\n    };\n\n    _this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5\n    };\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onListenForMessages();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.firebase.messages().off();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          text = _this$state.text,\n          messages = _this$state.messages,\n          loading = _this$state.loading;\n      return React.createElement(AuthUserContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, function (authUser) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, !loading && messages && React.createElement(Button, {\n          type: \"button\",\n          onClick: _this2.onNextPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"More\"), loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, \"Loading ...\"), messages && React.createElement(MessageList, {\n          authUser: authUser,\n          messages: messages,\n          onEditMessage: _this2.onEditMessage,\n          onRemoveMessage: _this2.onRemoveMessage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), !messages && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"There are no messages ...\"), React.createElement(Form, {\n          inline: true,\n          onSubmit: function onSubmit(event) {\n            return _this2.onCreateMessage(event, authUser);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"text\",\n          value: text,\n          onChange: _this2.onChangeText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(Button, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Send\"), React.createElement(Button, {\n          color: \"warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Stream Now\"), React.createElement(Button, {\n          disable: isStreaming,\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, \" Stop Stream\"), \"-\"));\n      });\n    }\n  }]);\n\n  return Messages;\n}(Component);\n\nexport default withFirebase(Messages);","map":{"version":3,"sources":["/home/a11one/reverb/src/components/Messages/Messages.js"],"names":["React","Component","Button","Input","Form","AuthUserContext","withFirebase","MessageList","isStreaming","Messages","props","onListenForMessages","setState","loading","firebase","messages","orderByChild","limitToLast","state","limit","on","snapshot","messageObject","val","messageList","Object","keys","map","key","uid","onChangeText","event","text","target","value","onCreateMessage","authUser","push","userId","userName","username","createdAt","serverValue","TIMESTAMP","preventDefault","onEditMessage","message","messageSnapshot","set","editedAt","onRemoveMessage","remove","onNextPage","off"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Input, Form } from 'reactstrap';\nimport { AuthUserContext } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport MessageList from './MessageList';\n\nvar isStreaming = false;\n\nclass Messages extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n      loading: false,\n      messages: [],\n      limit: 5,\n    };\n  }\n\n  componentDidMount() {\n    this.onListenForMessages();\n  }\n\n  onListenForMessages = () => {\n    this.setState({ loading: true });\n\n    this.props.firebase\n      .messages()\n      .orderByChild('createdAt')\n      .limitToLast(this.state.limit)\n      .on('value', snapshot => {\n        const messageObject = snapshot.val();\n\n        if (messageObject) {\n          const messageList = Object.keys(messageObject).map(key => ({\n            ...messageObject[key],\n            uid: key,\n          }));\n\n          this.setState({\n            messages: messageList,\n            loading: false,\n          });\n        } else {\n          this.setState({ messages: null, loading: false });\n        }\n      });\n  };\n\n  componentWillUnmount() {\n    this.props.firebase.messages().off();\n  }\n\n  onChangeText = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  onCreateMessage = (event, authUser) => {\n    this.props.firebase.messages().push({\n      text: this.state.text,\n      userId: authUser.uid,\n      userName: authUser.username,\n      createdAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n\n    this.setState({ text: '' });\n\n    event.preventDefault();\n  };\n\n  onEditMessage = (message, text) => {\n    const { uid, ...messageSnapshot } = message;\n\n    this.props.firebase.message(message.uid).set({\n      ...messageSnapshot,\n      text,\n      editedAt: this.props.firebase.serverValue.TIMESTAMP,\n    });\n  };\n\n  onRemoveMessage = uid => {\n    this.props.firebase.message(uid).remove();\n  };\n\n  onNextPage = () => {\n    this.setState(\n      state => ({ limit: state.limit + 5 }),\n      this.onListenForMessages,\n    );\n  };\n\n  render() {\n    const { text, messages, loading } = this.state;\n\n    return (\n      <AuthUserContext.Consumer>\n        {authUser => (\n          <div>\n            {!loading && messages && (\n              <Button type=\"button\" onClick={this.onNextPage}>\n                More\n              </Button>\n            )}\n\n            {loading && <div>Loading ...</div>}\n\n            {messages && (\n              <MessageList\n                authUser={authUser}\n                messages={messages}\n                onEditMessage={this.onEditMessage}\n                onRemoveMessage={this.onRemoveMessage}\n              />\n            )}\n\n            {!messages && <div>There are no messages ...</div>}\n\n            <Form inline\n              onSubmit={event =>\n                this.onCreateMessage(event, authUser)\n              }\n            >\n              <Input\n                type=\"text\"\n                value={text}\n                onChange={this.onChangeText}\n              />\n              <Button type=\"submit\">Send</Button>\n              <Button color=\"warning\">Stream Now</Button>\n              <Button disable={isStreaming} color=\"danger\"> Stop Stream</Button>-\n            </Form>\n          </div>\n        )}\n      </AuthUserContext.Consumer>\n    );\n  }\n}\n\nexport default withFirebase(Messages);\n"]},"metadata":{},"sourceType":"module"}