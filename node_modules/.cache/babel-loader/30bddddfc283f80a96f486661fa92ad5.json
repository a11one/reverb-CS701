{"ast":null,"code":"import _classCallCheck from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/a11one/reverb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/a11one/reverb/src/components/Songs/SongItem.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nvar SongItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SongItem, _Component);\n\n  function SongItem(props) {\n    var _this;\n\n    _classCallCheck(this, SongItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SongItem).call(this, props));\n\n    _this.onToggleEditMode = function () {\n      _this.setState(function (state) {\n        return {\n          editMode: !state.editMode,\n          editSong: _this.props.song.current_song\n        };\n      });\n    };\n\n    _this.onChangeEditSong = function (event) {\n      _this.setState({\n        editSong: event.target.value\n      });\n    };\n\n    _this.onSaveEditSong = function () {\n      _this.props.onEditSong(_this.props.song, _this.state.editSong);\n\n      _this.setState({\n        editMode: false\n      });\n    };\n\n    _this.state = {\n      editMode: false,\n      editSong: _this.props.song.current_song\n    };\n    return _this;\n  }\n\n  _createClass(SongItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          authUser = _this$props.authUser,\n          song = _this$props.song,\n          onRemoveSong = _this$props.onRemoveSong;\n      var _this$state = this.state,\n          editMode = _this$state.editMode,\n          editSong = _this$state.editSong;\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, editMode ? React.createElement(\"input\", {\n        type: \"text\",\n        value: editSong,\n        onChange: this.onChangeEditSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, song.userId), \" \", song.current_song, song.editedAt && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"(Edited)\")), authUser.uid === song.userId && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, editMode ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onSaveEditSong,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Button, {\n        onClick: this.onToggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Reset\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.onToggleEditMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Edit\")), !editMode && React.createElement(Button, {\n        type: \"button\",\n        onClick: function onClick() {\n          return onRemoveSong(song.uid);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Delete\")));\n    }\n  }]);\n\n  return SongItem;\n}(Component);\n\nexport default SongItem;","map":{"version":3,"sources":["/home/a11one/reverb/src/components/Songs/SongItem.js"],"names":["React","Component","Button","SongItem","props","onToggleEditMode","setState","state","editMode","editSong","song","current_song","onChangeEditSong","event","target","value","onSaveEditSong","onEditSong","authUser","onRemoveSong","userId","editedAt","uid"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,YAAvB;;IAEMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UASnBC,gBATmB,GASA,YAAM;AACvB,YAAKC,QAAL,CAAc,UAAAC,KAAK;AAAA,eAAK;AACtBC,UAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC,QADK;AAEtBC,UAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWM,IAAX,CAAgBC;AAFJ,SAAL;AAAA,OAAnB;AAID,KAdkB;;AAAA,UAgBnBC,gBAhBmB,GAgBA,UAAAC,KAAK,EAAI;AAC1B,YAAKP,QAAL,CAAc;AAAEG,QAAAA,QAAQ,EAAEI,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd;AACD,KAlBkB;;AAAA,UAoBnBC,cApBmB,GAoBF,YAAM;AACrB,YAAKZ,KAAL,CAAWa,UAAX,CAAsB,MAAKb,KAAL,CAAWM,IAAjC,EAAuC,MAAKH,KAAL,CAAWE,QAAlD;;AAEA,YAAKH,QAAL,CAAc;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAxBkB;;AAGjB,UAAKD,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE,MAAKL,KAAL,CAAWM,IAAX,CAAgBC;AAFf,KAAb;AAHiB;AAOlB;;;;6BAmBQ;AAAA,wBACkC,KAAKP,KADvC;AAAA,UACCc,QADD,eACCA,QADD;AAAA,UACWR,IADX,eACWA,IADX;AAAA,UACiBS,YADjB,eACiBA,YADjB;AAAA,wBAEwB,KAAKZ,KAF7B;AAAA,UAECC,QAFD,eAECA,QAFD;AAAA,UAEWC,QAFX,eAEWA,QAFX;AAIP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,QAAQ,GACP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEC,QAFT;AAGE,QAAA,QAAQ,EAAE,KAAKG,gBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,GAOP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASF,IAAI,CAACU,MAAd,CADF,OACkCV,IAAI,CAACC,YADvC,EAEGD,IAAI,CAACW,QAAL,IAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFpB,CARJ,EAcGH,QAAQ,CAACI,GAAT,KAAiBZ,IAAI,CAACU,MAAtB,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,QAAQ,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKQ,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADO,GAMP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKA,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAPJ,EAYG,CAACG,QAAD,IACC,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAMW,YAAY,CAACT,IAAI,CAACY,GAAN,CAAlB;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbJ,CAfJ,CADF;AAwCD;;;;EAvEoBrB,S;;AA0EvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\n\nclass SongItem extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editMode: false,\n      editSong: this.props.song.current_song,\n    };\n  }\n\n  onToggleEditMode = () => {\n    this.setState(state => ({\n      editMode: !state.editMode,\n      editSong: this.props.song.current_song,\n    }));\n  };\n\n  onChangeEditSong = event => {\n    this.setState({ editSong: event.target.value });\n  };\n\n  onSaveEditSong = () => {\n    this.props.onEditSong(this.props.song, this.state.editSong);\n\n    this.setState({ editMode: false });\n  };\n\n  render() {\n    const { authUser, song, onRemoveSong } = this.props;\n    const { editMode, editSong } = this.state;\n\n    return (\n      <li>\n        {editMode ? (\n          <input\n            type=\"text\"\n            value={editSong}\n            onChange={this.onChangeEditSong}\n          />\n        ) : (\n          <span>\n            <strong>{song.userId}</strong> {song.current_song}\n            {song.editedAt && <span>(Edited)</span>}\n          </span>\n        )}\n\n        {authUser.uid === song.userId && (\n          <span>\n            {editMode ? (\n              <span>\n                <Button onClick={this.onSaveEditSong}>Save</Button>\n                <Button onClick={this.onToggleEditMode}>Reset</Button>\n              </span>\n            ) : (\n              <div>\n                <Button onClick={this.onToggleEditMode}>Edit</Button>\n              </div>\n            )}\n\n            {!editMode && (\n              <Button\n                type=\"button\"\n                onClick={() => onRemoveSong(song.uid)}\n              >\n                Delete\n              </Button>\n            )}\n          </span>\n        )}\n      </li>\n    );\n  }\n}\n\nexport default SongItem;\n"]},"metadata":{},"sourceType":"module"}